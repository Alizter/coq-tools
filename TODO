* Add continuous integration and an actual test suite

* Reduce files before inlining them (or add an option to do so), and
  inline incrementally

* Try using delta-debugging, and being smarter about ordering of
  removals

* Remember timing information for definitions, so we can be smart
  about prioritizing things that take a long time.

* Consider skipping changes that make compilation much slower (e.g.,
  removing a quick-path instance).  Maybe make a tuning parameter for
  how much size needs to be reduced to accept a given reduction in
  speed.

* Deal with [Load] better

* Rename "hint removal" to something more accurate

* Add a front-end to replace_imports.py, so it can be run as it's own
  program

* Add an option for doing the aggressive thing first

* Interleave "hint" removal and definition removal

* Print out the last few lines of the file around the error in the
  case that the error changes and it causes a catastrophic
  error. (e.g., if splitting the file to definitions changes the error
  message)
